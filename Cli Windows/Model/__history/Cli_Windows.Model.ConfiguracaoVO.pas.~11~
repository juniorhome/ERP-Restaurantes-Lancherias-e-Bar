unit Cli_Windows.Model.ConfiguracaoVO;

interface

uses
    orm.IBaseVO, orm.Atributos, REST.json;

type
  [TTabela('CONFIGURACAO', 'CONF', 'Configuração', 'Configurações')]
  TConfiguracaoVO = class(TInterfacedObject, IBaseVO<TConfiguracaoVO>)
    private
      FId: integer;
      FPath_Xml: string;
      FPath_Danfe: string;
      FPath_Remessa: string;
      FPath_Retorno: string;
      FPath_Logo: string;
      FDias_Protesto: integer;
      FEspecie: string;
      FAceite: string;
      FCarteira: string;
      FLocal_Pgto: string;
      FInstrucao_1: string;
      FInstrucao_2: string;
      FCont_Remessa: integer;
      FPath_Pdf: string;
      FCertificadora: string;
      FTipo_Cert: string;
      FPath_Certificadora: string;
      FRazao_Social: string;
      FFantasia: string;
      FCnpj: string;
      FIdCrt: integer;
      FCrtCrt: string;
      FDescricaoCrt: string;
    public
      [TChavePrimaria('ID', 'Código', 'Códigos')]
      property Id: integer read FId write FId;
      [TCampoTexto('PATH_XML', 'Caminho Nota', 'Caminhos Notas', '', 150, False)]
      property PathXML: string read FPath_Xml write FPath_Xml;
      [TCampoTexto('PATH_DANFE', 'Caminho DANFE', 'Caminhos DANFEs', '', 150, False)]
      property PathDanfe: string read FPath_Danfe write FPath_Danfe;
      [TCampoTexto('PATH_REMESSA', 'Caminho Remessa', 'Caminhos Remessas', '', 150, False)]
      property PathRemessa: string read FPath_Remessa write FPath_Remessa;
      [TCampoTexto('PATH_RETORNO', 'Caminho Retorno', 'Caminhos Retornos', '', 150, False)]
      property PathRetorno: string read FPath_Retorno write FPath_Retorno;
      [TCampoTexto('PATH_LOGO', 'Caminho Logo', 'Caminhos Logos', '', 150, False)]
      property PathLogo: string read FPath_Logo write FPath_Logo;
      [TCampoInteiro('DIAS_PROTESTO', 'Dias Protesto', 'Dias Protestos')]
      property DiasProtesto: integer read FDias_Protesto write FDias_Protesto;
      [TCampoTexto('ESPECIE', 'Espécie', 'Espécies', '', 20, False)]
      property Especie: string read FEspecie write FEspecie;
      [TCampoTexto('ACEITE', 'Aceite', 'Aceites', '', 3, False)]
      property Aceite: string read FAceite write FAceite;
      [TCampoTexto('CARTEIRA', 'Carteira', 'Carteiras', '', 3, False)]
      property Carteira: string read FCarteira write FCarteira;
      [TCampoTexto('LOCAL_PGTO', 'Local Pagamento', 'Locais Pagamentos', '', 100, False)]
      property LocalPgto: string read FLocal_Pgto write FLocal_Pgto;
      property Intrucao1: string read FInstrucao_1 write FInstrucao_1;
      property Instrucao2: string read FInstrucao_2 write FInstrucao_2;
      property ContRemessa: integer read FCont_Remessa write FCont_Remessa;
      property PathPdf: string read FPath_Remessa write FPath_Remessa;
      property Certificadora: string read FCertificadora write FCertificadora;
      property TipoCertiificadora: string read FTipo_Cert write FTipo_Cert;
      property PathCertificadora: string read FPath_Certificadora write FPath_Certificadora;
      property RazaoSocial: string read FRazao_Social write FRazao_Social;
      property Fantasia: string read FFantasia write FFantasia;
      property Cnpj: string read FCnpj write FCnpj;
      property IdCrt: integer read FIdCrt write FIdCrt;
      property CrtCrt: string read FCrtCrt write FCrtCrt;
      property DescricaoCrt: string read FDescricaoCrt write FDescricaoCrt;
      constructor Create;
      destructor Destroy;override;
      class function New: TConfiguracaoVO;
      function toJson(): string;
      function fromJson(json: string): TConfiguracaoVO;
  end;

implementation

{ TConfiguracaoVO }

constructor TConfiguracaoVO.Create;
begin
  //
end;

destructor TConfiguracaoVO.Destroy;
begin
  //
  inherited;
end;

function TConfiguracaoVO.fromJson(json: string): TConfiguracaoVO;
begin
  Result := TJson.JsonToObject<TConfiguracaoVO>(json);
end;

class function TConfiguracaoVO.New: TConfiguracaoVO;
begin
  Result := Self.Create;
end;

function TConfiguracaoVO.toJson: string;
begin
   Result := TJson.ObjectToJsonString(Self);
end;

end.
